<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.essence.icbm.sys.dao.SysUserNoticeStatusDao">
  <resultMap id="BaseResultMap" type="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatus">
    <id column="NOTICE_ID" jdbcType="INTEGER" property="noticeId" />
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="IS_READ" jdbcType="CHAR" property="isRead" />
    <result column="IS_TOP" jdbcType="CHAR" property="isTop" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    NOTICE_ID, USER_ID, IS_READ, IS_TOP, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatusKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_notice_status
    where NOTICE_ID = #{noticeId,jdbcType=INTEGER}
      and USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatusKey">
    delete from sys_user_notice_status
    where NOTICE_ID = #{noticeId,jdbcType=INTEGER}
      and USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="NOTICE_ID" keyProperty="noticeId" parameterType="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatus" useGeneratedKeys="true">
    insert into sys_user_notice_status (USER_ID, IS_READ, IS_TOP, 
      UPDATE_TIME)
    values (#{userId,jdbcType=INTEGER}, #{isRead,jdbcType=CHAR}, #{isTop,jdbcType=CHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="NOTICE_ID" keyProperty="noticeId" parameterType="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatus" useGeneratedKeys="true">
    insert into sys_user_notice_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="isRead != null">
        IS_READ,
      </if>
      <if test="isTop != null">
        IS_TOP,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=CHAR},
      </if>
      <if test="isTop != null">
        #{isTop,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatus">
    update sys_user_notice_status
    <set>
      <if test="isRead != null">
        IS_READ = #{isRead,jdbcType=CHAR},
      </if>
      <if test="isTop != null">
        IS_TOP = #{isTop,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where NOTICE_ID = #{noticeId,jdbcType=INTEGER}
      and USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.essence.icbm.sys.bean.po.SysUserNoticeStatus">
    update sys_user_notice_status
    set IS_READ = #{isRead,jdbcType=CHAR},
      IS_TOP = #{isTop,jdbcType=CHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where NOTICE_ID = #{noticeId,jdbcType=INTEGER}
      and USER_ID = #{userId,jdbcType=INTEGER}
  </update>

  <insert id ="batchInsert" parameterType="java.util.List" >
    insert into
    sys_user_notice_status
    (NOTICE_ID, USER_ID, IS_READ, IS_TOP, UPDATE_TIME)
    values
    <foreach collection ="list" item="item" index= "index" separator =",">
      (
      #{item.noticeId},
      #{item.userId},
      #{item.isRead},
      #{item.isTop},
      #{item.updateTime}
      )
    </foreach >
  </insert >

  <update id="updateNoticeReadStatus">
    update sys_user_notice_status a
    set a.IS_READ = #{isRead}
    where a.USER_ID=#{userId} and a.NOTICE_ID in
    <foreach item="item" index="index" collection="noticeIds" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>

<!--  <update id="updateNoticeDeleteStatus">-->
<!--    update sys_user_notice_status a-->
<!--    set a.IS_DELETED = #{isDelete}-->
<!--    where a.USER_ID=#{userId} and a.NOTICE_ID in-->
<!--    <foreach item="item" index="index" collection="noticeIds" open="(" separator="," close=")">-->
<!--      #{item}-->
<!--    </foreach>-->
<!--  </update>-->
</mapper>